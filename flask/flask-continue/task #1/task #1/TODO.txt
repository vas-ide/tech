Упражнения

+1. Дан класс:
    class Lock(object):
      def __init__(self):
        self.lock = False
    
    Сделать менеджер контекста, который может переопределить 
    значение lock на True внутри блока контекста.


+2. Сделать менеджер контекста, который бы проглатывал все исключения вызванные 
   в теле и писал их в консоль, пример использования:
    
    with no_exceptions():
      1 / 0 # => logs: ZeroDivisionError

    print('Done!') # => continues execution


+3. Сделать менеджер контекста, который бы мог измерять время выполнения блока кода, 
   пример использования:
    
    with TimeIt() as t:
      some_long_function()

    print('Execution time was:', t.time)





Практическое задание:

+1. Пользователь по GET запросу на адрес / получает
сообщение: "Число загадано"

+2. Пользователь по POST запросе на адрес /guess
получает один из следующих результатов: ">", "<", "="

+3. Если число угадано - загадываем новое число

+4. Flask при старте сервера - устанавливает seed для
random, генерирует случайное число для угадывания

+5. Администратор задает seed для модуля рандом через
переменную окружения FLASK_RANDOM_SEED





О чем подумать?
+ Все пользователи угадывают одно число или
каждый свое?

+ Можно ли считать количество попыток и количество угаданных чисел?

+ Как хранить данные между запросами?
